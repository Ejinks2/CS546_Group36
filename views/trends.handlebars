<main class="charts-container">
<section class="filters-section">
  <div id="boroughFilters">Sort by Borough: </div>
  <div id="monthFilters">Sort by Month: </div>
  <div id="offenseFilters"> Sort by Offense: 
  </div>
</section>
<section class="chart-section">
  <canvas id="myChart"></canvas>
</section>
</main>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="/js/charts.js"></script>

<script>
  const ctx = document.getElementById('myChart');
  let crimeData = {{{crimes}}};
  crimeData = crimeData.filter(c => c.borough !== "(null)");
  
  const uniqueBoroughs = [...new Set(crimeData.map(crime => crime.borough))];
  const uniqueCrimes = [...new Set(crimeData.map(crime => crime.offense))];
  const uniqueMonths = [...new Set(crimeData.map(crime => crime.date.substring(5,7)))];
  uniqueMonths.sort(); // sort alphabetically
  uniqueBoroughs.sort();
  uniqueCrimes.sort();
  uniqueMonths.push("ALL");
  uniqueBoroughs.push("ALL");
  uniqueCrimes.push("ALL"); // add all option to each filter
  const bfilters = document.getElementById("boroughFilters");
  uniqueBoroughs.forEach(borough => { // dynamically create and add each filter button
      let bButton = document.createElement("button");
      bButton.textContent = borough;
      bButton.id = borough;
      bButton.classList.add("btn");
      bfilters.appendChild(bButton);
  });

  const cfilters = document.getElementById("offenseFilters");
  uniqueCrimes.forEach(crime => {
    let cButton = document.createElement("button");
    cButton.textContent = crime;
    cButton.id = crime;
    cButton.classList.add("btn");
    cfilters.appendChild(cButton);
  });

  const tfilters = document.getElementById("monthFilters");
  uniqueMonths.forEach(month => {
    let tButton = document.createElement("button");
    tButton.textContent = typeof monthRef[month] === "undefined" ? "ALL" : monthRef[month];
    tButton.id = month;
    tButton.classList.add("btn");
    tfilters.appendChild(tButton);
  });



  let crimeChart;
  crimeChart = updateChartC(crimeData, ctx, crimeChart, "ALL", uniqueBoroughs.slice(0,-1)); // initial chart

  // apply appropriate callback to each button type
  document.getElementById("boroughFilters").addEventListener("click", e => {
      if (e.target.tagName === "BUTTON") {
        const borough = e.target.id;
        const filtered = borough === "ALL" ? crimeData : crimeData.filter(c => c.borough === borough);
        crimeChart = updateChartB(filtered, document.getElementById("myChart"), crimeChart, borough, uniqueCrimes.slice(0,-1));
      }
  });

  document.getElementById("monthFilters").addEventListener("click", e => {
      if (e.target.tagName === "BUTTON") {
        const month = e.target.id;
        const filtered = month === "ALL" ? crimeData : crimeData.filter(c => c.date.substring(5,7) === month);
        crimeChart = updateChartT(filtered, document.getElementById("myChart"), crimeChart, month, uniqueCrimes.slice(0,-1));
      }
  });

  document.getElementById("offenseFilters").addEventListener("click", e => {
      if (e.target.tagName === "BUTTON") {
        const crime = e.target.id;
        const filtered = crime === "ALL" ? crimeData : crimeData.filter(c => c.offense === crime);
        crimeChart = updateChartC(filtered, document.getElementById("myChart"), crimeChart, crime, uniqueBoroughs.slice(0,-1));
      }
  });
  </script>